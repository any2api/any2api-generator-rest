#%RAML 0.8
---
title: REST
baseUri: http://{host}/api/{version}
version: v1
#uriParameters:
#  host:
#    description: The host of the API (e.g., 'localhost')
#    displayName: Host
#    type: string
#  port:
#    description: The port on the host where the API is served (e.g., 8080)
#    displayName: Port
#    type: number

schemas:
  - run: |
      {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "type": "object",
        "properties": {
          "parameters": {
            "type": "object",
            "properties": {
              "invoker_config": {}
            }
          },
          "results": {
            "type": "object",
            "properties": {
              "stdout": { "type": "string" },
              "stderr": { "type": "string" }
            }
          },
          "_links": {
            "type": "object",
            "patternProperties": {
              "[a-zA-Z0-9-_.]+": {
                "type": "object",
                "properties": {
                  "href": { "type": "string" }
                }
              }
            }
          },
          "_id": { "type": "string" },
          "status": { "type": "string" },
          "created": { "type": "string" },
          "finished": { "type": "string" },
          "failed": { "type": "string" },
          "error": { "type": "string" }
        },
        "required": [ "parameters" ]
      }
  - runCollection: |
      {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "type": "array",
        "description": "List of runs"
      }


/runs:
  get:
    description: List all runs
    queryParameters:
      status:
        type: string
        description: Filter runs by status ('running', 'finished', etc.)
        example: running
        required: false
    responses:
      200:
        body:
          application/json:
            schema: runCollection
  post:
    description: Add a new run
    body:
      application/json:
        schema: run
    responses:
      201:
        body:
          application/json:
            schema: run
  /{runId}:
    get:
      description: Get run details
      responses:
        200:
          body:
            application/json:
              schema: run
        404:
          body:
            application/json:
              example: |
                { "message": "run missing" }
    put:
      description: Update run to set status, e.g., to 'running'
      body:
        application/json:
          schema: run
          example: |
            { "status": "running" }
      responses:
        200:
          body:
            application/json:
              schema: run
    delete:
      description: Delete run permanently
